{% set version = "1.1.4" %}
{% set posix = 'm2-' if win else '' %}

package:
  name: r-leidenalg
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/leidenAlg_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/leidenAlg/leidenAlg_{{ version }}.tar.gz
  sha256: 2dea1e561ff9f2b429adf5f4ccce2fab824ca3e02800168f160880ad2a44c7d6
  patches:
    - patches/0001-use-AR-variable.patch

build:
  number: 2
  rpaths:
    - lib/R/lib/
    - lib/
  missing_dso_whitelist:
    - '*/R.dll'        # [win]
    - '*/Rblas.dll'    # [win]
    - '*/Rlapack.dll'  # [win]

requirements:
  build:
    - cross-r-base {{ r_base }}    # [build_platform != target_platform]
    - r-matrix                     # [build_platform != target_platform]
    - r-matrix.utils               # [build_platform != target_platform]
    - r-rcpp                       # [build_platform != target_platform]
    - r-rcpparmadillo              # [build_platform != target_platform]
    - r-rcppeigen                  # [build_platform != target_platform]
    - r-igraph                     # [build_platform != target_platform]
    - r-sccore                     # [build_platform != target_platform]
    - {{ compiler('c') }}          # [not win]
    - {{ stdlib("c") }}            # [not win]
    - {{ compiler('m2w64_c') }}    # [win]
    - {{ stdlib("m2w64_c") }}      # [win]
    - {{ compiler('cxx') }}        # [not win]
    - {{ compiler('m2w64_cxx') }}  # [win]
    - {{ compiler('fortran') }}    # [not win]
    - {{ compiler('m2w64_fortran') }}  # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]
  host:
    - r-base
    - r-matrix
    - r-matrix.utils
    - r-rcpp >=1.0.5
    - r-rcpparmadillo
    - r-rcppeigen
    - r-igraph
    - r-sccore
  run:
    - r-base
    - r-matrix
    - r-matrix.utils
    - r-rcpp >=1.0.5
    - r-rcpparmadillo
    - r-rcppeigen
    - r-igraph
    - r-sccore

test:
  requires:
    - r-testthat
  source_files:
    - tests/
  commands:
    - $R -e "library('leidenAlg')"                                                    # [not win]
    - $R -e "testthat::test_file('tests/testthat.R', stop_on_failure=TRUE)"           # [not win]
    - "\"%R%\" -e \"library('leidenAlg')\""                                           # [win]
    - "\"%R%\" -e \"testthat::test_file('tests/testthat.R', stop_on_failure=TRUE)\""  # [win]

about:
  home: https://github.com/kharchenkolab/leidenAlg
  license: GPL-3.0-or-later
  summary: 'An R interface to the Leiden algorithm, an iterative community detection algorithm on networks. The algorithm is designed to converge to a partition in which all subsets of all communities are locally optimally assigned, yielding communities guaranteed to be connected. The implementation proves to be fast, scales
    well, and can be run on graphs of millions of nodes (as long as they can fit in memory). The original implementation was constructed as a python interface "leidenalg" found here: <https://github.com/vtraag/leidenalg>. The algorithm was originally described in Traag, V.A., Waltman, L. & van Eck, N.J. "From Louvain to
    Leiden: guaranteeing well-connected communities". Sci Rep 9, 5233 (2019) <doi:10.1038/s41598-019-41695-z>.'
  license_file:
    - {{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3

extra:
  recipe-maintainers:
    - conda-forge/r
    - raivivek
